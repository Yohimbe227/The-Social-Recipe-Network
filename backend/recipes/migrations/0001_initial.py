# Generated by Django 4.2 on 2023-05-12 17:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AmountIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.PositiveSmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Добавьте что-нибудь!."
                            ),
                            django.core.validators.MaxValueValidator(
                                100, "Слишком много!"
                            ),
                        ],
                        verbose_name="Количество",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ингридиент",
                "verbose_name_plural": "Количество ингридиентов",
                "ordering": ("recipe",),
            },
        ),
        migrations.CreateModel(
            name="Carts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_added",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата добавления"
                    ),
                ),
            ],
            options={
                "verbose_name": "рецепт в списке покупок",
                "verbose_name_plural": "рецепты в списке покупок",
            },
        ),
        migrations.CreateModel(
            name="Favorites",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_added",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="дата добавления"
                    ),
                ),
            ],
            options={
                "verbose_name": "Избранный рецепт",
                "verbose_name_plural": "Избранные рецепты",
            },
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64, verbose_name="ингридиент")),
                (
                    "measurement_unit",
                    models.CharField(max_length=24, verbose_name="Единицы измерения"),
                ),
            ],
            options={
                "verbose_name": "Ингридиент",
                "verbose_name_plural": "Ингридиенты",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("color", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(unique=True)),
            ],
            options={
                "verbose_name": "тэг",
                "verbose_name_plural": "тэги",
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=64, verbose_name="название блюда"),
                ),
                (
                    "pub_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="дата публикации"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="mediafiles/", verbose_name="изображение блюда"
                    ),
                ),
                (
                    "text",
                    models.TextField(max_length=5000, verbose_name="описание блюда"),
                ),
                (
                    "cooking_time",
                    models.PositiveSmallIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Введите корректное время!"
                            ),
                            django.core.validators.MaxValueValidator(
                                300, "Слишком долго ждать..."
                            ),
                        ],
                        verbose_name="время приготовления",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recipes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="автор рецепта",
                    ),
                ),
                (
                    "ingredients",
                    models.ManyToManyField(
                        related_name="recipes",
                        through="recipes.AmountIngredient",
                        to="recipes.ingredient",
                        verbose_name="ингредиенты блюда",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        related_name="recipes", to="recipes.tag", verbose_name="тэг"
                    ),
                ),
            ],
            options={
                "verbose_name": "Рецепт",
                "verbose_name_plural": "Рецепты",
                "ordering": ("-pub_date",),
            },
        ),
        migrations.AddConstraint(
            model_name="ingredient",
            constraint=models.UniqueConstraint(
                fields=("name", "measurement_unit"), name="unique_for_ingredient"
            ),
        ),
        migrations.AddConstraint(
            model_name="ingredient",
            constraint=models.CheckConstraint(
                check=models.Q(("name__length__gt", 0)),
                name="\nrecipes_ingredient_name is empty\n",
            ),
        ),
        migrations.AddConstraint(
            model_name="ingredient",
            constraint=models.CheckConstraint(
                check=models.Q(("measurement_unit__length__gt", 0)),
                name="\nrecipes_ingredient_measurement_unit is empty\n",
            ),
        ),
        migrations.AddField(
            model_name="favorites",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="in_favorites",
                to="recipes.recipe",
                verbose_name="понравившиеся рецепты",
            ),
        ),
        migrations.AddField(
            model_name="favorites",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="favorites",
                to=settings.AUTH_USER_MODEL,
                verbose_name="пользователь",
            ),
        ),
        migrations.AddField(
            model_name="carts",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="in_carts",
                to="recipes.recipe",
                verbose_name="рецепты в списке покупок",
            ),
        ),
        migrations.AddField(
            model_name="carts",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="carts",
                to=settings.AUTH_USER_MODEL,
                verbose_name="владелец списка",
            ),
        ),
        migrations.AddField(
            model_name="amountingredient",
            name="ingredients",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recipe",
                to="recipes.ingredient",
                verbose_name="Связанные ингредиенты",
            ),
        ),
        migrations.AddField(
            model_name="amountingredient",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredient",
                to="recipes.recipe",
                verbose_name="В каких рецептах",
            ),
        ),
        migrations.AddConstraint(
            model_name="recipe",
            constraint=models.UniqueConstraint(
                fields=("name", "author"), name="unique_for_author"
            ),
        ),
        migrations.AddConstraint(
            model_name="recipe",
            constraint=models.CheckConstraint(
                check=models.Q(("name__length__gt", 0)),
                name="recipes_recipe_name is empty",
            ),
        ),
        migrations.AddConstraint(
            model_name="favorites",
            constraint=models.UniqueConstraint(
                fields=("recipe", "user"),
                name="recipes_favorites recipe is favorite alredy",
            ),
        ),
        migrations.AddConstraint(
            model_name="carts",
            constraint=models.UniqueConstraint(
                fields=("recipe", "user"), name="recipes_carts рецепт уже в списке"
            ),
        ),
        migrations.AddConstraint(
            model_name="amountingredient",
            constraint=models.UniqueConstraint(
                fields=("recipe", "ingredients"),
                name="recipes_amountingredient ingredient alredy added",
            ),
        ),
    ]
